#ifndef litepcie_userclient_h
#define litepcie_userclient_h

#include <Availability.h>
#include <DriverKit/IOLib.h>
#include <DriverKit/IOUserClient.iig>

class litepcie_userclient : public IOUserClient {
public:
    virtual bool init(void) override;
    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;
    virtual void free(void) override;

    virtual kern_return_t ExternalMethod(
        uint64_t selector,
        IOUserClientMethodArguments* arguments,
        const IOUserClientMethodDispatch* dispatch,
        OSObject* target,
        void* reference) override;
    virtual kern_return_t CopyClientMemoryForType(
        uint64_t type,
        uint64_t* options,
        IOMemoryDescriptor** memory) override;

    kern_return_t HandleICAP(IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleFlash(IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleReadCSR(IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleWriteCSR(IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleConfigDmaChannel(IOUserClientMethodArguments* arguments, bool is_reader) LOCALONLY;
};

#endif /* litepcie_userclient_h */
